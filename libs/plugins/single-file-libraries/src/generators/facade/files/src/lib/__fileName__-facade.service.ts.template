import { computed, makeEnvironmentProviders, EnvironmentProviders,  Injectable, signal } from '@angular/core';

interface State {
  someProp: unknown;
}

const initialState: Readonly<State> = {
  someProp: null,
};

export const provide<%=className%>FacadeService = (): EnvironmentProviders =>
  makeEnvironmentProviders([<%=className%>FacadeService]);

@Injectable()
export class <%=className%>FacadeService {
  private readonly stateSignal = signal(initialState);
  readonly somePropSignal = computed(() => this.stateSignal().someProp);
}
